---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
  namespace: database
  annotations:
    kyverno.io/ignore: "true"
spec:
  instances: 3
  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:15.5-v0.2.0
  enableSuperuserAccess: true
  inheritedMetadata:
    labels:
      kube-image-keeper.enix.io/image-caching-policy: ignore
  primaryUpdateStrategy: unsupervised
  storage:
    size: 20Gi
    storageClass: local-path
  superuserSecret:
    name: cloudnative-pg-secret
  bootstrap:
    # initdb:
    #   database: app
    #   owner: app
    #   secret:
    #     name: cloudnative-pg-app-user
    recovery:
      source: &previousCluster postgres-v4
  postgresql:
    parameters:
      max_connections: "600"
      shared_buffers: 512MB
    shared_preload_libraries:
      - "vectors.so"
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 3d
    barmanObjectStore:
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://cloudnative-pg/
      endpointURL: https://s3.eu-central-003.backblazeb2.com
      serverName: &currentCluster postgres-v5
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: backblaze-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: backblaze-key
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: *previousCluster
      barmanObjectStore:
        wal:
          compression: bzip2
          maxParallel: 8
        destinationPath: s3://cloudnative-pg/
        endpointURL: https://s3.eu-central-003.backblazeb2.com
        s3Credentials:
          accessKeyId:
            name: cloudnative-pg-secret
            key: backblaze-id
          secretAccessKey:
            name: cloudnative-pg-secret
            key: backblaze-key
