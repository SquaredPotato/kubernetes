---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: slskd
  namespace: download-clients
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      slskd:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/slskd/slskd
              tag: 0.22.2@sha256:e2e4b25f6d12fc6018fa91d1e95311f1734d3f809f02b32f3fd9457b1113e06f
            env:
              DOTNET_BUNDLE_EXTRACT_BASE_DIR: /tmp/.net
              TZ: Europe/Amsterdam
              SLSKD_APP_DIR: /config
              SLSKD_HTTP_PORT: &port 80
              SLSKD_NO_AUTH: true
              SLSKD_NO_HTTPS: true
              SLSKD_SLSK_LISTEN_PORT: &soulseekPort 50300
            envFrom:
              - secretRef:
                  name: slskd-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 420
                  periodSeconds: 30
                  timeoutSeconds: 30
                  failureThreshold: 10
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 101000
        runAsGroup: 101000
        fsGroup: 101000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: slskd
        type: LoadBalancer
        loadBalancerIP: "${CLUSTER_SOULSEEK_IP}"
        ports:
          http:
            port: *port
          soulseek:
            enabled: true
            port: *soulseekPort
            protocol: TCP
    serviceMonitor:
      app:
        serviceName: slskd
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.abchost.nl"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: slskd
      config-file:
        type: configMap
        name: slskd-configmap
        globalMounts:
          - path: /config/slskd.yml
            subPath: slskd.yml
            readOnly: true
      tmp:
        type: emptyDir
      media:
        type: nfs
        server: "${LAN_TRUENAS_IP}"
        path: /mnt/MAIN/media
        globalMounts:
          - path: /mnt/general
      music:
        type: nfs
        server: "${LAN_TRUENAS_IP}"
        path: /mnt/MAIN/miscellaneous/music
        globalMounts:
          - path: /mnt/general/music