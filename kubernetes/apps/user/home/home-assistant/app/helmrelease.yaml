---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      home-assistant:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/home-assistant
              tag: 2025.4.2@sha256:222543ae0ac1f23a756e584f99d9eaae0f708b72d8d36cd1965ea5dd04ffd9b7
            env:
              TZ: Europe/Amsterdam
              HASS_HTTP_TRUSTED_PROXY_1: 192.168.0.0/21
              HASS_HTTP_TRUSTED_PROXY_2: 10.42.0.0/16
              HASS_HTTP_TRUSTED_PROXY_3: 10.43.0.0/16
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
    defaultPodOptions:
      hostNetwork: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: home-assistant
        ports:
          http:
            port: 8123
    ingress:
      webhook:
        className: external
        annotations:
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        hosts:
          - host: &host home.abchost.nl
            paths:
            - path: /api/webhook/
              service:
                  identifier: app
                  port: http
      app:
        className: external
        annotations:
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          # # This should be the in-cluster DNS name for the authentik outpost service
          # # as when the external URL is specified here, nginx will overwrite some crucial headers
          # nginx.ingress.kubernetes.io/auth-url: |-
          #     http://ak-outpost-authentik-embedded-outpost.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          # # If you're using domain-level auth, use the authentication URL instead of the application URL
          # nginx.ingress.kubernetes.io/auth-signin: |-
          #     https://home.abchost.nl/outpost.goauthentik.io/start?rd=$escaped_request_uri
          # nginx.ingress.kubernetes.io/auth-response-headers: |-
          #     Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          # nginx.ingress.kubernetes.io/auth-snippet: |
          #     proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      time:
        enabled: true
        type: hostPath
        hostPath: /etc/localtime
        globalMounts:
          - path: /etc/localtime
            readOnly: true
      config:
        existingClaim: home-assistant
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      tts:
        type: emptyDir
        globalMounts:
          - path: /config/tts
      tmp:
        type: emptyDir
