---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      home-assistant:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/home-assistant
              tag: 2024.10.2@sha256:697edc9de392e2f3506584899df7754cf26e59b4e86861932e0219b6e8aab03e
            env:
              TZ: Europe/Amsterdam
              HASS_HTTP_TRUSTED_PROXY_1: 192.168.0.0/21
              HASS_HTTP_TRUSTED_PROXY_2: 10.42.0.0/16
              HASS_HTTP_TRUSTED_PROXY_3: 10.43.0.0/16
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
    defaultPodOptions:
      hostNetwork: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: home-assistant
        ports:
          http:
            port: 8123
    ingress:
      app:
        className: external
        annotations:
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          # This should be the in-cluster DNS name for the authentik outpost service
          # as when the external URL is specified here, nginx will overwrite some crucial headers
          nginx.ingress.kubernetes.io/auth-url: |-
              http://ak-outpost-authentik-embedded-outpost.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          # If you're using domain-level auth, use the authentication URL instead of the application URL
          nginx.ingress.kubernetes.io/auth-signin: |-
              https://home.abchost.nl/outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
              Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
              proxy_set_header X-Forwarded-Host $http_host;
          nginx.org/server-snippets: |
            location / {
              # Put your proxy_pass to your application here
              proxy_pass          $forward_scheme://$server:$port;
              # Set any other headers your application might need
              # proxy_set_header Host $host;
              # proxy_set_header ...
              proxy_set_header Host $host;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
              ##############################
              # authentik-specific config
              ##############################
              auth_request     /outpost.goauthentik.io/auth/nginx;
              error_page       401 = @goauthentik_proxy_signin;
              auth_request_set $auth_cookie $upstream_http_set_cookie;
              add_header       Set-Cookie $auth_cookie;

              # translate headers from the outposts back to the actual upstream
              auth_request_set $authentik_username $upstream_http_x_authentik_username;
              auth_request_set $authentik_groups $upstream_http_x_authentik_groups;
              auth_request_set $authentik_email $upstream_http_x_authentik_email;
              auth_request_set $authentik_name $upstream_http_x_authentik_name;
              auth_request_set $authentik_uid $upstream_http_x_authentik_uid;

              proxy_set_header X-authentik-username $authentik_username;
              proxy_set_header X-authentik-groups $authentik_groups;
              proxy_set_header X-authentik-email $authentik_email;
              proxy_set_header X-authentik-name $authentik_name;
              proxy_set_header X-authentik-uid $authentik_uid;
            }

            # Handle Authentik paths, excluding /auth/token
            location ~ ^/auth/(?!token) {
                # Internal Home Assistant address
                proxy_pass          $forward_scheme://$server:$port;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # Forward Authentik headers as needed
                proxy_set_header X-authentik-auth-callback true;
            }

            # Handle /auth/token specifically
            location /auth/token {
                # Internal Home Assistant address
                proxy_pass          $forward_scheme://$server:$port;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # All requests to /outpost.goauthentik.io must be accessible without authentication
            location /outpost.goauthentik.io {
                # Internal Authentik server address
                proxy_pass              http://ak-outpost-authentik-embedded-outpost.security.svc.cluster.local:9000/outpost.goauthentik.io;
                proxy_set_header        Host $host;
                proxy_set_header        X-Original-URL $scheme://$http_host$request_uri;
                add_header              Set-Cookie $auth_cookie;
                auth_request_set        $auth_cookie $upstream_http_set_cookie;
                proxy_pass_request_body off;
                proxy_set_header        Content-Length "";
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Special location for when the /auth endpoint returns a 401,
            # redirect to the /start URL which initiates SSO
            location @goauthentik_proxy_signin {
                internal;
                add_header Set-Cookie $auth_cookie;
                return 302 /outpost.goauthentik.io/start?rd=$request_uri;
            }
        hosts:
          - host: home.abchost.nl
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      time:
        enabled: true
        type: hostPath
        hostPath: /etc/localtime
        globalMounts:
          - path: /etc/localtime
            readOnly: true
      config:
        existingClaim: home-assistant
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      tts:
        type: emptyDir
        globalMounts:
          - path: /config/tts
      tmp:
        type: emptyDir
