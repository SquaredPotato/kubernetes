---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich
  namespace: immich
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      server:
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1
        strategy: RollingUpdate
        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: server
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: &immich-version v1.118.2
            envFrom:
              - configMapRef:
                  name: immich
            env:
              DB_DATABASE_NAME:
                valueFrom:
                  secretKeyRef:
                    name: immich-database
                    key: POSTGRES_DB
              DB_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: immich-database
                    key: POSTGRES_USER
              DB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: immich-database
                    key: POSTGRES_PASSWORD
              DB_URL:
                valueFrom:
                  secretKeyRef:
                    name: immich-database
                    key: POSTGRES_URL
              REVERSE_GEOCODING_DUMP_DIRECTORY: /geodata-cache
              IMMICH_PORT: &server-port 2283
            probes:
              liveness: &server-probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/server/ping
                    port: *server-port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *server-probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/server/ping
                    port: *server-port
                  failureThreshold: 30
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 1
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                memory: 1Gi

      machine-learning:
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 3
        strategy: RollingUpdate
        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: machine-learning
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: *immich-version
            envFrom:
              - configMapRef:
                  name: immich
            env:
              TRANSFORMERS_CACHE: /cache
              IMMICH_PORT: &maching-learning-port 3003
            probes:
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
              liveness:
                enabled: true
              readiness:
                enabled: true
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
              limits:
                cpu: 2000m
                memory: 4Gi
    service:
      server:
        controller: server
        ports:
          http:
            port: *server-port
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: *maching-learning-port
    ingress:
      external:
        enabled: true
        className: external
        annotations:
          nginx.ingress.kubernetes.io/force-ssl-redirect: true
        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  identifier: server
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      time:
        enabled: true
        type: hostPath
        hostPath: /etc/localtime
        globalMounts:
          - path: /etc/localtime
            readOnly: true
      library:
        type: nfs
        server: "${LAN_TRUENAS_IP}"
        path: /mnt/MAIN/contain/storage/general/immich/library
        advancedMounts:
          server:
            app:
              - path: /usr/src/app/upload/library
      thumbnail:
        existingClaim: immich-thumbs
        advancedMounts:
          server:
            app:
              - path: /usr/src/app/upload/thumbs
      encoded-video:
        type: nfs
        server: "${LAN_TRUENAS_IP}"
        path: /mnt/MAIN/contain/storage/general/immich/encoded-videos
        advancedMounts:
          server:
            app:
              - path: /usr/src/app/upload/encoded-video
      profile:
        existingClaim: immich-profile
        advancedMounts:
          server:
            app:
              - path: /usr/src/app/upload/profile
      upload:
        existingClaim: immich-upload
        advancedMounts:
          server:
            app:
              - path: /usr/src/app/upload/upload
      microservices:
        existingClaim: immich-microservices
        advancedMounts:
          server:
            app:
              - path: /geodata-cache
      machine-learning:
        existingClaim: immich-machine-learning
        advancedMounts:
          machine-learning:
            app:
              - path: /cache